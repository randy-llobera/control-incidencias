name: DB CI Gate

on:
  pull_request:
    branches: [main] # validate PRs targeting main
    paths:
      - "supabase/**"
      - "scripts/**"
      - ".github/workflows/db-ci.yml"
  push:
    branches: [working] # validate direct pushes to working
    paths:
      - "supabase/**"
      - "scripts/**"
      - ".github/workflows/db-ci.yml"
  workflow_dispatch: {} # allow manual runs when needed

jobs:
  db-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase start (services up)
        run: supabase start -x studio -x imgproxy -x edge-runtime

      - name: Supabase DB reset (fresh build)
        run: supabase db reset

      - name: Export local service env (API_URL, SERVICE_ROLE_KEY, DB_URL)
        id: svc
        shell: bash
        run: |
          set -euo pipefail
          supabase status --output env > .svc_env
          API_URL=$(grep '^API_URL=' .svc_env | cut -d= -f2-)
          SERVICE_ROLE_KEY=$(grep '^SERVICE_ROLE_KEY=' .svc_env | cut -d= -f2-)
          DB_URL=$(grep '^DB_URL=' .svc_env | cut -d= -f2-)

          {
            echo "NEXT_PUBLIC_SUPABASE_URL=$API_URL"
            echo "SUPABASE_SERVICE_ROLE_KEY=$SERVICE_ROLE_KEY"
            echo "LOCAL_DB_URL=$DB_URL"
            echo "LOCAL_ADMIN_EMAIL=${{ secrets.LOCAL_ADMIN_EMAIL || 'admin.local@example.com' }}"
            echo "LOCAL_ADMIN_PASSWORD=${{ secrets.LOCAL_ADMIN_PASSWORD || 'Passw0rd!-local' }}"
          } > .env.local

          echo "Wrote .env.local (masked):"
          sed 's/SUPABASE_SERVICE_ROLE_KEY=.*/SUPABASE_SERVICE_ROLE_KEY=****/; s/LOCAL_ADMIN_PASSWORD=.*/LOCAL_ADMIN_PASSWORD=****/' .env.local

      - name: Re-run seed (idempotent)
        run: npm run db:seed:local

      - name: Ensure local admin (Auth + mirror)
        run: npm run db:ensure-admin

      - name: Re-run seed (idempotent)
        run: npm run db:seed:local
